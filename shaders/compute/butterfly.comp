#version 460 core

#define PI 3.1415926535897932384626433

layout(local_size_x = 1, local_size_y = 16, local_size_z = 1) in;

layout(binding = 0, rgba32f) uniform image2D butterfly;

layout(binding = 1, std430) buffer indices
{
	int reversed[];
};

struct complex
{
	float re;
	float im;
};

void main()
{
	uvec2 id = gl_GlobalInvocationID.xy;
	int size = imageSize(butterfly).y;

	uint b = size >> (id.x + 1);
	float mult = 2 * PI / size;
	uint i = (2 * b * (id.y / b) + id.y % b) % size;
	vec2 twiddle = vec2(cos(-mult * ((id.y / b) * b)), sin(-mult * ((id.y / b) * b)));
	imageStore(butterfly, ivec2(id), vec4(twiddle.x, twiddle.y, i, i+b));
	imageStore(butterfly, ivec2(id.x, id.y + size / 2), vec4(-twiddle.x, -twiddle.y, i, i+b));
}
