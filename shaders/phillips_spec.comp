#version 460 core

#define PI 3.1415926535897932384626433

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(binding = 0, rgba16f) uniform image2D spectrum;

float phillips(vec2 k)
{
	float A = 1.;

	vec2 wind = vec2(10.0, 5.0);
	float wind_mag = length(wind);
	wind = normalize(wind);

	float k_mag = length(k);
	k = normalize(k);

	float g = 9.81;
	float L = pow(wind_mag, 2) / g;

	float res = exp(-1/pow(k_mag * L, 2)) / pow(k_mag, 4);
	res *= pow(abs(dot(wind, k)), 8);
	res *= A;

	return res;
}

void main() {
	uvec3 id = gl_GlobalInvocationID;

	ivec2 size = imageSize(spectrum);

	float x = (id.x * 2 * PI / size.x) - PI;
	float y = (id.y * 2 * PI / size.y) - PI;

	vec2 coords = vec2(x, y);

	float ph = sqrt(phillips(coords)) / sqrt(2);

	vec4 val = imageLoad(spectrum, ivec2(id.xy));

	float newR = val.r * ph;
	float newG = val.g * ph;

	if (isnan(newR)) newR = 0.0;
	if (isnan(newG)) newG = 0.0;

	imageStore(spectrum, ivec2(id.xy), vec4(newR, newG, 0, 0));
}
